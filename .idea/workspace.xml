<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e5d3ddc6-4969-4e5e-ae43-4aacbf71e183" name="Changes" comment="- Created base classes:&#10;  - BaseTest.java: Contains common setup and teardown methods for tests.&#10;  - TestData.java: Provides test data and utility methods.&#10;&#10;- Implemented Page Object Model (POM) structure:&#10;  - CartPage.java: Page object for the shopping cart page.&#10;  - CheckoutPage.java: Page object for the checkout page.&#10;  - FooterPage.java: Page object for the footer section.&#10;  - InventoryPage.java: Page object for the inventory/product listing page.&#10;  - LoginPage.java: Page object for the login page.&#10;  - NavigationPage.java: Page object for navigation elements.&#10;  - ProductPage.java: Page object for the individual product page.&#10;&#10;- Added test classes:&#10;  - AddToCartTest.java: Tests for adding items to the cart.&#10;  - BurgerMenuTest.java: Tests for interactions with the burger menu.&#10;  - CheckoutTest.java: Tests for the checkout process.&#10;  - FooterTest.java: Tests for footer links and interactions.&#10;  - LoginTest.java: Tests for user login functionality.&#10;  - ProblemUserTest.java: Tests specific to problem user scenarios.&#10;  - ProductTest.java: Tests for product listing and details.&#10;  - RemoveFromCartTest.java: Tests for removing items from the cart.&#10;  - SortTest.java: Tests for sorting products.">
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/tests/AddToCartTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/tests/AddToCartTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/tests/BurgerMenuTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/tests/BurgerMenuTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/tests/CheckoutTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/tests/CheckoutTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/tests/FooterTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/tests/FooterTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/tests/LoginTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/tests/LoginTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/tests/ProblemUserTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/tests/ProblemUserTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/tests/ProductTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/tests/ProductTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/tests/RemoveFromCartTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/tests/RemoveFromCartTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/tests/SortTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/tests/SortTest.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <excluded-from-favorite>
      <branch-storage>
        <map>
          <entry type="LOCAL">
            <value>
              <list>
                <branch-info repo="$PROJECT_DIR$/SauceDemoAutomation" source="main" />
              </list>
            </value>
          </entry>
        </map>
      </branch-storage>
    </excluded-from-favorite>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="ROOT_SYNC" value="DONT_SYNC" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2hsSw0hlWmxBK9PX5HIS14kAzt9" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;TestNG.&lt;default&gt;.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.AddToCartTest.addAllItemsToCart.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.AddToCartTest.addItemsToCart.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.AddToCartTest.addItemsToCartById.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.AddToCartTest.addItemsToCartByName.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.AddToCartTest.addItemsToCartByName2.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.AddToCartTest.addedProductsAreInCart.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.AddToCartTest.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.AddToCartTest.userCanAddAllProductsToCart.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.AddToCartTest.userCanAddItemsToCartByName.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.AddToCartTest.userCanAddProductInCart.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.AddToCartTest.userCanAddProductToCartByName.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.AddToCartTest.userCanRemoveALlProductsFromCart.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.AddToCartTest.userCanRemoveProductFromCart.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.BurgerMenuTest.about.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.BurgerMenuTest.allItems.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.BurgerMenuTest.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.BurgerMenuTest.resetAppState.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.BurgerMenuTest.resetAppStateClearsCartItems.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.BurgerMenuTest.test.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.BurgerMenuTest.userIsRedirectedToAllProductsPage.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.CheckoutTest.afterSubmittingInformationUserIsRedirectedToCheckoutOverview.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.CheckoutTest.byFinishingOrderUserIsRedirectedToCheckoutCompletePage.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.CheckoutTest.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.CheckoutTest.test.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.CheckoutTest.userCannotFinishOrderWithEmptyFields.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.CheckoutTest.userCannotFinishOrderWithEmptyFirstNameField.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.CheckoutTest.userIsOnCheckoutPage.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.CheckoutTest.userSuccessfullyOrderedProducts.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.FooterTest.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.FooterTest.userIsRedirectedToFacebook.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.FooterTest.userIsRedirectedToLinkedIn.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.FooterTest.userIsRedirectedToTwitter.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.LoginTest.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.LoginTest.lockedOutUserCannotLogin.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.LoginTest.standardUserCanLogin.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.LoginTest.userCanLogin.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.LoginTest.userCanLoginWithValidInputs.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.LoginTest.userCannotLoginEmptyPasswordField.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.LoginTest.userCannotLoginEmptyUsernameField.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.LoginTest.userCannotLoginUsingInvalidPassword.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.LoginTest.userCannotLoginUsingInvalidUsername.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.LogoutTest.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.LogoutTest.userCanLogout.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.LogoutTest.userCannotLogout.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUser.addToCartButtonsAreNotClickable.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUser.clickingOnSauceLabsBackpackUserIsRedirectedToOtherProduct.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUser.clickingOnTheUserIsRedirectedToAnotherProduct.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUser.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUser.isValidDescriptionAndPriceForSauceLabsBackpack.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUser.removeAllProductsInventoryPage.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUser.userCannotAddAllProductsToCart.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUser.userCannotBeRedirectedToAboutPage.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUser.userCannotFinishOrderWithEmptyPostalCodeField.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUser.userCannotSortProducts.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUser.userCannotSortProductsByNameZToA.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUsers.addToCartButtonsAreNotClickable.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUsers.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUsers.lastNameCharacterCopiedToFirstNameFieldOnCheckoutPageWithFailedOrder.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUsers.lastNameLastCharacterCopiedToFirstNameField.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProblemUsers.userCannotEnterToLastNameField.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProductTest.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProductTest.isValidDescriptionAndPriceForSauceLabsBikeLight.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.ProductTest.isValidDescriptionForSauceLabsBackpack.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.RemoveFromCartTest.addAllItemsToCart.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.RemoveFromCartTest.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.RemoveFromCartTest.removeAllItemsToCart.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.RemoveFromCartTest.removeAllProducts.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.RemoveFromCartTest.removeAllProductsInventoryPage.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.RemoveFromCartTest.userCanRemoveALlProductsFromCart.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.RemoveFromCartTest.userCanRemoveALlProductsFromCartPage.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.RemoveFromCartTest.userCanRemoveProductFromCart.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.RemoveFromCartTest.userCanRemoveProductFromTheCartByName.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.SortTest.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.SortTest.sort.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.SortTest.test.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.SortTest.userCanSortProductsByNameZToA.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.SortTest.userCanSortProductsByPriceHighToLow.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.SortTest.userCanSortProductsByPriceLowToHigh.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.base.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.tests.AddToCartTest,userCanRemoveProductFromCart and 1 more.executor&quot;: &quot;Run&quot;,
    &quot;TestNG.tests.executor&quot;: &quot;Run&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/milan/IdeaProjects/SwagLabsAutomation/src/main/java/org/example/Main.java&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="RunManager" selected="TestNG.tests">
    <configuration name="BurgerMenuTest.resetAppStateClearsCartItems" type="TestNG" temporary="true" nameIsGenerated="true">
      <module name="SauceDemoAutomation" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="tests.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="tests" />
      <option name="MAIN_CLASS_NAME" value="tests.BurgerMenuTest" />
      <option name="METHOD_NAME" value="resetAppStateClearsCartItems" />
      <option name="TEST_OBJECT" value="METHOD" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="BurgerMenuTest.userIsRedirectedToAllProductsPage" type="TestNG" temporary="true" nameIsGenerated="true">
      <module name="SauceDemoAutomation" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="tests.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="tests" />
      <option name="MAIN_CLASS_NAME" value="tests.BurgerMenuTest" />
      <option name="METHOD_NAME" value="userIsRedirectedToAllProductsPage" />
      <option name="TEST_OBJECT" value="METHOD" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="RemoveFromCartTest.userCanRemoveProductFromCart" type="TestNG" temporary="true" nameIsGenerated="true">
      <module name="SauceDemoAutomation" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="tests.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="tests" />
      <option name="MAIN_CLASS_NAME" value="tests.RemoveFromCartTest" />
      <option name="METHOD_NAME" value="userCanRemoveProductFromCart" />
      <option name="TEST_OBJECT" value="METHOD" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="&lt;default&gt;" type="TestNG" temporary="true" nameIsGenerated="true">
      <module name="SauceDemoAutomation" />
      <option name="PACKAGE_NAME" value="" />
      <option name="TEST_OBJECT" value="PACKAGE" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="tests" type="TestNG" temporary="true" nameIsGenerated="true">
      <module name="SauceDemoAutomation" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="tests.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="tests" />
      <option name="TEST_OBJECT" value="PACKAGE" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="TestNG.tests" />
        <item itemvalue="TestNG.BurgerMenuTest.resetAppStateClearsCartItems" />
        <item itemvalue="TestNG.&lt;default&gt;" />
        <item itemvalue="TestNG.RemoveFromCartTest.userCanRemoveProductFromCart" />
        <item itemvalue="TestNG.BurgerMenuTest.userIsRedirectedToAllProductsPage" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e5d3ddc6-4969-4e5e-ae43-4aacbf71e183" name="Changes" comment="" />
      <created>1718381543418</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1718381543418</updated>
    </task>
    <task id="LOCAL-00001" summary="Initial Commit">
      <option name="closed" value="true" />
      <created>1718392282526</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1718392282526</updated>
    </task>
    <task id="LOCAL-00002" summary="- Created base classes:&#10;  - BaseTest.java: Contains common setup and teardown methods for tests.&#10;  - TestData.java: Provides test data and utility methods.&#10;&#10;- Implemented Page Object Model (POM) structure:&#10;  - CartPage.java: Page object for the shopping cart page.&#10;  - CheckoutPage.java: Page object for the checkout page.&#10;  - FooterPage.java: Page object for the footer section.&#10;  - InventoryPage.java: Page object for the inventory/product listing page.&#10;  - LoginPage.java: Page object for the login page.&#10;  - NavigationPage.java: Page object for navigation elements.&#10;  - ProductPage.java: Page object for the individual product page.&#10;&#10;- Added test classes:&#10;  - AddToCartTest.java: Tests for adding items to the cart.&#10;  - BurgerMenuTest.java: Tests for interactions with the burger menu.&#10;  - CheckoutTest.java: Tests for the checkout process.&#10;  - FooterTest.java: Tests for footer links and interactions.&#10;  - LoginTest.java: Tests for user login functionality.&#10;  - ProblemUserTest.java: Tests specific to problem user scenarios.&#10;  - ProductTest.java: Tests for product listing and details.&#10;  - RemoveFromCartTest.java: Tests for removing items from the cart.&#10;  - SortTest.java: Tests for sorting products.">
      <option name="closed" value="true" />
      <created>1718813688652</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1718813688652</updated>
    </task>
    <task id="LOCAL-00003" summary="- Created base classes:&#10;  - BaseTest.java: Contains common setup and teardown methods for tests.&#10;  - TestData.java: Provides test data and utility methods.&#10;&#10;- Implemented Page Object Model (POM) structure:&#10;  - CartPage.java: Page object for the shopping cart page.&#10;  - CheckoutPage.java: Page object for the checkout page.&#10;  - FooterPage.java: Page object for the footer section.&#10;  - InventoryPage.java: Page object for the inventory/product listing page.&#10;  - LoginPage.java: Page object for the login page.&#10;  - NavigationPage.java: Page object for navigation elements.&#10;  - ProductPage.java: Page object for the individual product page.&#10;&#10;- Added test classes:&#10;  - AddToCartTest.java: Tests for adding items to the cart.&#10;  - BurgerMenuTest.java: Tests for interactions with the burger menu.&#10;  - CheckoutTest.java: Tests for the checkout process.&#10;  - FooterTest.java: Tests for footer links and interactions.&#10;  - LoginTest.java: Tests for user login functionality.&#10;  - ProblemUserTest.java: Tests specific to problem user scenarios.&#10;  - ProductTest.java: Tests for product listing and details.&#10;  - RemoveFromCartTest.java: Tests for removing items from the cart.&#10;  - SortTest.java: Tests for sorting products.">
      <option name="closed" value="true" />
      <created>1718814884408</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1718814884408</updated>
    </task>
    <task id="LOCAL-00004" summary="- Created base classes:&#10;  - BaseTest.java: Contains common setup and teardown methods for tests.&#10;  - TestData.java: Provides test data and utility methods.&#10;&#10;- Implemented Page Object Model (POM) structure:&#10;  - CartPage.java: Page object for the shopping cart page.&#10;  - CheckoutPage.java: Page object for the checkout page.&#10;  - FooterPage.java: Page object for the footer section.&#10;  - InventoryPage.java: Page object for the inventory/product listing page.&#10;  - LoginPage.java: Page object for the login page.&#10;  - NavigationPage.java: Page object for navigation elements.&#10;  - ProductPage.java: Page object for the individual product page.&#10;&#10;- Added test classes:&#10;  - AddToCartTest.java: Tests for adding items to the cart.&#10;  - BurgerMenuTest.java: Tests for interactions with the burger menu.&#10;  - CheckoutTest.java: Tests for the checkout process.&#10;  - FooterTest.java: Tests for footer links and interactions.&#10;  - LoginTest.java: Tests for user login functionality.&#10;  - ProblemUserTest.java: Tests specific to problem user scenarios.&#10;  - ProductTest.java: Tests for product listing and details.&#10;  - RemoveFromCartTest.java: Tests for removing items from the cart.&#10;  - SortTest.java: Tests for sorting products.">
      <option name="closed" value="true" />
      <created>1718821842031</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1718821842031</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="Initial Commit" />
    <MESSAGE value="- Created base classes:&#10;  - BaseTest.java: Contains common setup and teardown methods for tests.&#10;  - TestData.java: Provides test data and utility methods.&#10;&#10;- Implemented Page Object Model (POM) structure:&#10;  - CartPage.java: Page object for the shopping cart page.&#10;  - CheckoutPage.java: Page object for the checkout page.&#10;  - FooterPage.java: Page object for the footer section.&#10;  - InventoryPage.java: Page object for the inventory/product listing page.&#10;  - LoginPage.java: Page object for the login page.&#10;  - NavigationPage.java: Page object for navigation elements.&#10;  - ProductPage.java: Page object for the individual product page.&#10;&#10;- Added test classes:&#10;  - AddToCartTest.java: Tests for adding items to the cart.&#10;  - BurgerMenuTest.java: Tests for interactions with the burger menu.&#10;  - CheckoutTest.java: Tests for the checkout process.&#10;  - FooterTest.java: Tests for footer links and interactions.&#10;  - LoginTest.java: Tests for user login functionality.&#10;  - ProblemUserTest.java: Tests specific to problem user scenarios.&#10;  - ProductTest.java: Tests for product listing and details.&#10;  - RemoveFromCartTest.java: Tests for removing items from the cart.&#10;  - SortTest.java: Tests for sorting products." />
    <option name="LAST_COMMIT_MESSAGE" value="- Created base classes:&#10;  - BaseTest.java: Contains common setup and teardown methods for tests.&#10;  - TestData.java: Provides test data and utility methods.&#10;&#10;- Implemented Page Object Model (POM) structure:&#10;  - CartPage.java: Page object for the shopping cart page.&#10;  - CheckoutPage.java: Page object for the checkout page.&#10;  - FooterPage.java: Page object for the footer section.&#10;  - InventoryPage.java: Page object for the inventory/product listing page.&#10;  - LoginPage.java: Page object for the login page.&#10;  - NavigationPage.java: Page object for navigation elements.&#10;  - ProductPage.java: Page object for the individual product page.&#10;&#10;- Added test classes:&#10;  - AddToCartTest.java: Tests for adding items to the cart.&#10;  - BurgerMenuTest.java: Tests for interactions with the burger menu.&#10;  - CheckoutTest.java: Tests for the checkout process.&#10;  - FooterTest.java: Tests for footer links and interactions.&#10;  - LoginTest.java: Tests for user login functionality.&#10;  - ProblemUserTest.java: Tests specific to problem user scenarios.&#10;  - ProductTest.java: Tests for product listing and details.&#10;  - RemoveFromCartTest.java: Tests for removing items from the cart.&#10;  - SortTest.java: Tests for sorting products." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/Main.java</url>
          <line>13</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>