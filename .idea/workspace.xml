<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e5d3ddc6-4969-4e5e-ae43-4aacbf71e183" name="Changes" comment="- Created base classes:&#10;  - BaseTest.java: Contains common setup and teardown methods for tests.&#10;  - TestData.java: Provides test data and utility methods.&#10;&#10;- Implemented Page Object Model (POM) structure:&#10;  - CartPage.java: Page object for the shopping cart page.&#10;  - CheckoutPage.java: Page object for the checkout page.&#10;  - FooterPage.java: Page object for the footer section.&#10;  - InventoryPage.java: Page object for the inventory/product listing page.&#10;  - LoginPage.java: Page object for the login page.&#10;  - NavigationPage.java: Page object for navigation elements.&#10;  - ProductPage.java: Page object for the individual product page.&#10;&#10;- Added test classes:&#10;  - AddToCartTest.java: Tests for adding items to the cart.&#10;  - BurgerMenuTest.java: Tests for interactions with the burger menu.&#10;  - CheckoutTest.java: Tests for the checkout process.&#10;  - FooterTest.java: Tests for footer links and interactions.&#10;  - LoginTest.java: Tests for user login functionality.&#10;  - ProblemUserTest.java: Tests specific to problem user scenarios.&#10;  - ProductTest.java: Tests for product listing and details.&#10;  - RemoveFromCartTest.java: Tests for removing items from the cart.&#10;  - SortTest.java: Tests for sorting products." />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <excluded-from-favorite>
      <branch-storage>
        <map>
          <entry type="LOCAL">
            <value>
              <list>
                <branch-info repo="$PROJECT_DIR$/SauceDemoAutomation" source="main" />
              </list>
            </value>
          </entry>
        </map>
      </branch-storage>
    </excluded-from-favorite>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="ROOT_SYNC" value="DONT_SYNC" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2hsSw0hlWmxBK9PX5HIS14kAzt9" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "TestNG.<default>.executor": "Run",
    "TestNG.AddToCartTest.addAllItemsToCart.executor": "Run",
    "TestNG.AddToCartTest.addItemsToCart.executor": "Run",
    "TestNG.AddToCartTest.addItemsToCartById.executor": "Run",
    "TestNG.AddToCartTest.addItemsToCartByName.executor": "Run",
    "TestNG.AddToCartTest.addItemsToCartByName2.executor": "Run",
    "TestNG.AddToCartTest.addedProductsAreInCart.executor": "Run",
    "TestNG.AddToCartTest.executor": "Run",
    "TestNG.AddToCartTest.userCanAddAllProductsToCart.executor": "Run",
    "TestNG.AddToCartTest.userCanAddItemsToCartByName.executor": "Run",
    "TestNG.AddToCartTest.userCanAddProductInCart.executor": "Run",
    "TestNG.AddToCartTest.userCanAddProductToCartByName.executor": "Run",
    "TestNG.AddToCartTest.userCanRemoveALlProductsFromCart.executor": "Run",
    "TestNG.AddToCartTest.userCanRemoveProductFromCart.executor": "Run",
    "TestNG.BurgerMenuTest.about.executor": "Run",
    "TestNG.BurgerMenuTest.allItems.executor": "Run",
    "TestNG.BurgerMenuTest.executor": "Run",
    "TestNG.BurgerMenuTest.resetAppState.executor": "Run",
    "TestNG.BurgerMenuTest.resetAppStateClearsCartItems.executor": "Run",
    "TestNG.BurgerMenuTest.test.executor": "Run",
    "TestNG.BurgerMenuTest.userIsRedirectedToAllProductsPage.executor": "Run",
    "TestNG.CheckoutTest.afterSubmittingInformationUserIsRedirectedToCheckoutOverview.executor": "Run",
    "TestNG.CheckoutTest.byFinishingOrderUserIsRedirectedToCheckoutCompletePage.executor": "Run",
    "TestNG.CheckoutTest.executor": "Run",
    "TestNG.CheckoutTest.test.executor": "Run",
    "TestNG.CheckoutTest.userCanCancelThePurchase.executor": "Run",
    "TestNG.CheckoutTest.userCannotFinishOrderWithEmptyFields.executor": "Run",
    "TestNG.CheckoutTest.userCannotFinishOrderWithEmptyFirstNameField.executor": "Run",
    "TestNG.CheckoutTest.userIsOnCheckoutPage.executor": "Run",
    "TestNG.CheckoutTest.userSuccessfullyOrderedProducts.executor": "Run",
    "TestNG.EndToEndTest.endToEndPurchaseFlow.executor": "Run",
    "TestNG.FooterTest.executor": "Run",
    "TestNG.FooterTest.userIsRedirectedToFacebook.executor": "Run",
    "TestNG.FooterTest.userIsRedirectedToLinkedIn.executor": "Run",
    "TestNG.FooterTest.userIsRedirectedToTwitter.executor": "Run",
    "TestNG.LoginTest.executor": "Run",
    "TestNG.LoginTest.lockedOutUserCannotLogin.executor": "Run",
    "TestNG.LoginTest.standardUserCanLogin.executor": "Run",
    "TestNG.LoginTest.userCanLogin.executor": "Run",
    "TestNG.LoginTest.userCanLoginWithValidInputs.executor": "Run",
    "TestNG.LoginTest.userCannotLoginEmptyPasswordField.executor": "Run",
    "TestNG.LoginTest.userCannotLoginEmptyUsernameField.executor": "Run",
    "TestNG.LoginTest.userCannotLoginUsingInvalidPassword.executor": "Run",
    "TestNG.LoginTest.userCannotLoginUsingInvalidUsername.executor": "Run",
    "TestNG.LogoutTest.executor": "Run",
    "TestNG.LogoutTest.userCanLogout.executor": "Run",
    "TestNG.LogoutTest.userCannotLogout.executor": "Run",
    "TestNG.ProblemUser.addToCartButtonsAreNotClickable.executor": "Run",
    "TestNG.ProblemUser.clickingOnSauceLabsBackpackUserIsRedirectedToOtherProduct.executor": "Run",
    "TestNG.ProblemUser.clickingOnTheUserIsRedirectedToAnotherProduct.executor": "Run",
    "TestNG.ProblemUser.executor": "Run",
    "TestNG.ProblemUser.isValidDescriptionAndPriceForSauceLabsBackpack.executor": "Run",
    "TestNG.ProblemUser.removeAllProductsInventoryPage.executor": "Run",
    "TestNG.ProblemUser.userCannotAddAllProductsToCart.executor": "Run",
    "TestNG.ProblemUser.userCannotBeRedirectedToAboutPage.executor": "Run",
    "TestNG.ProblemUser.userCannotFinishOrderWithEmptyPostalCodeField.executor": "Run",
    "TestNG.ProblemUser.userCannotSortProducts.executor": "Run",
    "TestNG.ProblemUser.userCannotSortProductsByNameZToA.executor": "Run",
    "TestNG.ProblemUsers.addToCartButtonsAreNotClickable.executor": "Run",
    "TestNG.ProblemUsers.executor": "Run",
    "TestNG.ProblemUsers.lastNameCharacterCopiedToFirstNameFieldOnCheckoutPageWithFailedOrder.executor": "Run",
    "TestNG.ProblemUsers.lastNameLastCharacterCopiedToFirstNameField.executor": "Run",
    "TestNG.ProblemUsers.userCannotEnterToLastNameField.executor": "Run",
    "TestNG.ProductTest.executor": "Run",
    "TestNG.ProductTest.isValidDescriptionAndPriceForSauceLabsBikeLight.executor": "Run",
    "TestNG.ProductTest.isValidDescriptionForSauceLabsBackpack.executor": "Run",
    "TestNG.RemoveFromCartTest.addAllItemsToCart.executor": "Run",
    "TestNG.RemoveFromCartTest.executor": "Run",
    "TestNG.RemoveFromCartTest.removeAllItemsToCart.executor": "Run",
    "TestNG.RemoveFromCartTest.removeAllProducts.executor": "Run",
    "TestNG.RemoveFromCartTest.removeAllProductsInventoryPage.executor": "Run",
    "TestNG.RemoveFromCartTest.userCanRemoveALlProductsFromCart.executor": "Run",
    "TestNG.RemoveFromCartTest.userCanRemoveALlProductsFromCartPage.executor": "Run",
    "TestNG.RemoveFromCartTest.userCanRemoveProductFromCart.executor": "Run",
    "TestNG.RemoveFromCartTest.userCanRemoveProductFromTheCartByName.executor": "Run",
    "TestNG.SortTest.executor": "Run",
    "TestNG.SortTest.sort.executor": "Run",
    "TestNG.SortTest.test.executor": "Run",
    "TestNG.SortTest.userCanSortProductsByNameZToA.executor": "Run",
    "TestNG.SortTest.userCanSortProductsByPriceHighToLow.executor": "Run",
    "TestNG.SortTest.userCanSortProductsByPriceLowToHigh.executor": "Run",
    "TestNG.base.executor": "Run",
    "TestNG.tests.AddToCartTest,userCanRemoveProductFromCart and 1 more.executor": "Run",
    "TestNG.tests.executor": "Run",
    "git-widget-placeholder": "master",
    "ignore.virus.scanning.warn.message": "true",
    "kotlin-language-version-configured": "true",
    "onboarding.tips.debug.path": "C:/Users/milan/IdeaProjects/SwagLabsAutomation/src/main/java/org/example/Main.java",
    "settings.editor.selected.configurable": "preferences.pluginManager"
  }
}]]></component>
  <component name="RunManager" selected="TestNG.tests">
    <configuration name="BurgerMenuTest.resetAppStateClearsCartItems" type="TestNG" temporary="true" nameIsGenerated="true">
      <module name="SauceDemoAutomation" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="tests.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="tests" />
      <option name="MAIN_CLASS_NAME" value="tests.BurgerMenuTest" />
      <option name="METHOD_NAME" value="resetAppStateClearsCartItems" />
      <option name="TEST_OBJECT" value="METHOD" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CheckoutTest.userCanCancelThePurchase" type="TestNG" temporary="true" nameIsGenerated="true">
      <module name="SauceDemoAutomation" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="tests.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="tests" />
      <option name="MAIN_CLASS_NAME" value="tests.CheckoutTest" />
      <option name="METHOD_NAME" value="userCanCancelThePurchase" />
      <option name="TEST_OBJECT" value="METHOD" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CheckoutTest.userCannotFinishOrderWithEmptyFields" type="TestNG" temporary="true" nameIsGenerated="true">
      <module name="SauceDemoAutomation" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="tests.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="tests" />
      <option name="MAIN_CLASS_NAME" value="tests.CheckoutTest" />
      <option name="METHOD_NAME" value="userCannotFinishOrderWithEmptyFields" />
      <option name="TEST_OBJECT" value="METHOD" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EndToEndTest.endToEndPurchaseFlow" type="TestNG" temporary="true" nameIsGenerated="true">
      <module name="SauceDemoAutomation" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="tests.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="tests" />
      <option name="MAIN_CLASS_NAME" value="tests.EndToEndTest" />
      <option name="METHOD_NAME" value="endToEndPurchaseFlow" />
      <option name="TEST_OBJECT" value="METHOD" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="tests" type="TestNG" temporary="true" nameIsGenerated="true">
      <module name="SauceDemoAutomation" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="tests.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="tests" />
      <option name="TEST_OBJECT" value="PACKAGE" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="TestNG.tests" />
        <item itemvalue="TestNG.CheckoutTest.userCanCancelThePurchase" />
        <item itemvalue="TestNG.CheckoutTest.userCannotFinishOrderWithEmptyFields" />
        <item itemvalue="TestNG.EndToEndTest.endToEndPurchaseFlow" />
        <item itemvalue="TestNG.BurgerMenuTest.resetAppStateClearsCartItems" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e5d3ddc6-4969-4e5e-ae43-4aacbf71e183" name="Changes" comment="" />
      <created>1718381543418</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1718381543418</updated>
    </task>
    <task id="LOCAL-00001" summary="Initial Commit">
      <option name="closed" value="true" />
      <created>1718392282526</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1718392282526</updated>
    </task>
    <task id="LOCAL-00002" summary="- Created base classes:&#10;  - BaseTest.java: Contains common setup and teardown methods for tests.&#10;  - TestData.java: Provides test data and utility methods.&#10;&#10;- Implemented Page Object Model (POM) structure:&#10;  - CartPage.java: Page object for the shopping cart page.&#10;  - CheckoutPage.java: Page object for the checkout page.&#10;  - FooterPage.java: Page object for the footer section.&#10;  - InventoryPage.java: Page object for the inventory/product listing page.&#10;  - LoginPage.java: Page object for the login page.&#10;  - NavigationPage.java: Page object for navigation elements.&#10;  - ProductPage.java: Page object for the individual product page.&#10;&#10;- Added test classes:&#10;  - AddToCartTest.java: Tests for adding items to the cart.&#10;  - BurgerMenuTest.java: Tests for interactions with the burger menu.&#10;  - CheckoutTest.java: Tests for the checkout process.&#10;  - FooterTest.java: Tests for footer links and interactions.&#10;  - LoginTest.java: Tests for user login functionality.&#10;  - ProblemUserTest.java: Tests specific to problem user scenarios.&#10;  - ProductTest.java: Tests for product listing and details.&#10;  - RemoveFromCartTest.java: Tests for removing items from the cart.&#10;  - SortTest.java: Tests for sorting products.">
      <option name="closed" value="true" />
      <created>1718813688652</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1718813688652</updated>
    </task>
    <task id="LOCAL-00003" summary="- Created base classes:&#10;  - BaseTest.java: Contains common setup and teardown methods for tests.&#10;  - TestData.java: Provides test data and utility methods.&#10;&#10;- Implemented Page Object Model (POM) structure:&#10;  - CartPage.java: Page object for the shopping cart page.&#10;  - CheckoutPage.java: Page object for the checkout page.&#10;  - FooterPage.java: Page object for the footer section.&#10;  - InventoryPage.java: Page object for the inventory/product listing page.&#10;  - LoginPage.java: Page object for the login page.&#10;  - NavigationPage.java: Page object for navigation elements.&#10;  - ProductPage.java: Page object for the individual product page.&#10;&#10;- Added test classes:&#10;  - AddToCartTest.java: Tests for adding items to the cart.&#10;  - BurgerMenuTest.java: Tests for interactions with the burger menu.&#10;  - CheckoutTest.java: Tests for the checkout process.&#10;  - FooterTest.java: Tests for footer links and interactions.&#10;  - LoginTest.java: Tests for user login functionality.&#10;  - ProblemUserTest.java: Tests specific to problem user scenarios.&#10;  - ProductTest.java: Tests for product listing and details.&#10;  - RemoveFromCartTest.java: Tests for removing items from the cart.&#10;  - SortTest.java: Tests for sorting products.">
      <option name="closed" value="true" />
      <created>1718814884408</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1718814884408</updated>
    </task>
    <task id="LOCAL-00004" summary="- Created base classes:&#10;  - BaseTest.java: Contains common setup and teardown methods for tests.&#10;  - TestData.java: Provides test data and utility methods.&#10;&#10;- Implemented Page Object Model (POM) structure:&#10;  - CartPage.java: Page object for the shopping cart page.&#10;  - CheckoutPage.java: Page object for the checkout page.&#10;  - FooterPage.java: Page object for the footer section.&#10;  - InventoryPage.java: Page object for the inventory/product listing page.&#10;  - LoginPage.java: Page object for the login page.&#10;  - NavigationPage.java: Page object for navigation elements.&#10;  - ProductPage.java: Page object for the individual product page.&#10;&#10;- Added test classes:&#10;  - AddToCartTest.java: Tests for adding items to the cart.&#10;  - BurgerMenuTest.java: Tests for interactions with the burger menu.&#10;  - CheckoutTest.java: Tests for the checkout process.&#10;  - FooterTest.java: Tests for footer links and interactions.&#10;  - LoginTest.java: Tests for user login functionality.&#10;  - ProblemUserTest.java: Tests specific to problem user scenarios.&#10;  - ProductTest.java: Tests for product listing and details.&#10;  - RemoveFromCartTest.java: Tests for removing items from the cart.&#10;  - SortTest.java: Tests for sorting products.">
      <option name="closed" value="true" />
      <created>1718821842031</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1718821842031</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="Initial Commit" />
    <MESSAGE value="- Created base classes:&#10;  - BaseTest.java: Contains common setup and teardown methods for tests.&#10;  - TestData.java: Provides test data and utility methods.&#10;&#10;- Implemented Page Object Model (POM) structure:&#10;  - CartPage.java: Page object for the shopping cart page.&#10;  - CheckoutPage.java: Page object for the checkout page.&#10;  - FooterPage.java: Page object for the footer section.&#10;  - InventoryPage.java: Page object for the inventory/product listing page.&#10;  - LoginPage.java: Page object for the login page.&#10;  - NavigationPage.java: Page object for navigation elements.&#10;  - ProductPage.java: Page object for the individual product page.&#10;&#10;- Added test classes:&#10;  - AddToCartTest.java: Tests for adding items to the cart.&#10;  - BurgerMenuTest.java: Tests for interactions with the burger menu.&#10;  - CheckoutTest.java: Tests for the checkout process.&#10;  - FooterTest.java: Tests for footer links and interactions.&#10;  - LoginTest.java: Tests for user login functionality.&#10;  - ProblemUserTest.java: Tests specific to problem user scenarios.&#10;  - ProductTest.java: Tests for product listing and details.&#10;  - RemoveFromCartTest.java: Tests for removing items from the cart.&#10;  - SortTest.java: Tests for sorting products." />
    <option name="LAST_COMMIT_MESSAGE" value="- Created base classes:&#10;  - BaseTest.java: Contains common setup and teardown methods for tests.&#10;  - TestData.java: Provides test data and utility methods.&#10;&#10;- Implemented Page Object Model (POM) structure:&#10;  - CartPage.java: Page object for the shopping cart page.&#10;  - CheckoutPage.java: Page object for the checkout page.&#10;  - FooterPage.java: Page object for the footer section.&#10;  - InventoryPage.java: Page object for the inventory/product listing page.&#10;  - LoginPage.java: Page object for the login page.&#10;  - NavigationPage.java: Page object for navigation elements.&#10;  - ProductPage.java: Page object for the individual product page.&#10;&#10;- Added test classes:&#10;  - AddToCartTest.java: Tests for adding items to the cart.&#10;  - BurgerMenuTest.java: Tests for interactions with the burger menu.&#10;  - CheckoutTest.java: Tests for the checkout process.&#10;  - FooterTest.java: Tests for footer links and interactions.&#10;  - LoginTest.java: Tests for user login functionality.&#10;  - ProblemUserTest.java: Tests specific to problem user scenarios.&#10;  - ProductTest.java: Tests for product listing and details.&#10;  - RemoveFromCartTest.java: Tests for removing items from the cart.&#10;  - SortTest.java: Tests for sorting products." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/Main.java</url>
          <line>13</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>